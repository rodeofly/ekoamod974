<!doctype html>
<html lang="fr">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Modéliser un problème</title>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.7.1/coffee-script.min.js"></script>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/themes/smoothness/jquery-ui.css" />
  <script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/jquery-ui.min.js"></script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js"></script> 
  <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Ubuntu:regular,bold&subset=Latin">
  <style type="text/css">
  body {
    margin:0;
    padding:0;
    width: 90%;
    margin: auto;
    border: solid black 0.2em;
    background: #622900 fixed no-repeat center center url('planche_carton.jpg');
    background-size: 100%;
    
    color: #FCB08B;
    font-family: Ubuntu, sans-serif; 
    font-size : 20px;
    text-align: center;    
    
  }
  
  body.rotate {
    width: 50%;
    display: inline-block;
    background: #622900 fixed no-repeat center center url('planche_carton.jpg');
    background-size: 100%;
  }

  #parametres, #admin_help, #enonce {
    background: black;
    color: white;  
    text-align: left;
    margin: 0.1em;
  }
  
  #trash.ui-droppable.ui-state-hover {
    color:red;
    text-shadow: 0.03em 0.03em black;
    background:transparent;
    border: none;
  }
  #trash.ui-droppable.ui-state-hover.ui-state-active {
    background: red;
    box-shadow: 0.02em 0.02em 0.02em 0.02em black;
  }
  
  #admin_menu, #user_menu  {
    float:right;
    padding-right: 0.5em;
    font-size: 3em;
  }
  
  .closer{
    position: absolute;
    bottom: 0px;
    right: 0px;
  }
  
  h1 {
    text-shadow: O.25em white;
    text-decoration: underline;
  }
  
  button {
    font-size: 2em;
  }
  
  .checkbox{
    width: 1.5em;
    height: 1.5em;
  }
  .arobas {
    display: inline-block;
  }
  .carte {
    display: inline-block;
    width: 1.25em;
    padding: 0.1em;
    border: 0.05em solid black; 
    background: #FCB08B;
    border-radius: 0.2em;
    font-weight:bolder;
    color : white;
    text-shadow: 1em #933D14;
  }
  
  .dollar.aide {
    box-shadow: 0em 0em 0.05em 0.05em blue;
  }
  
  .diese.aide {
    box-shadow: 0em 0em 0.05em 0.05em yellow;
  }
  
  .arobas.aide {
    box-shadow: 0em 0em 0.05em 0.05em red;
  }
  
  .item{
    position : absolute;
    width: 1.33em;
    height: 1.33em;
    font-size: 2em;
    z-index: 5000;
  }
  
  #panel {
    position: absolute;
    top: 0; bottom: 0; right: 0; left: 0;
  }
  
  
  #panel_top, #panel_bottom {
    position: relative;
    display: block;
    margin: auto;
    width : 100%;
    height : 48%;
    
  }
  
  #panel_top.rotate, #panel_bottom.rotate {
    
    position: relative;
    top: 0; left: 0;
    display: inline-block;
    width : 48%;
    height : 100%;
    
  }
  
  .panel.ui-droppable.ui-state-hover {
    background: transparent;
  }
  
  .panel.ui-droppable.ui-state-hover.ui-state-active {
    background: transparent;
    box-shadow: 0em 0em 0.2em 0.2em #FCB08B;
  }
  .enonce{
    position:absolute;
  }
  
  .ui-dialog-titlebar{
    background: #FCB08B;
    color: #622900;
  }
  
  .ui-dialog-titlebar-close {
    visibility: hidden;
  }

  .ui-dialog .ui-dialog-content {
    padding: 0.1em;
  }
  
  </style>
  
  <script type="text/coffeescript">
  # On Dom Ready !   
  $ ->
    
    $( "#admin_help, #parametres" ).dialog
      autoOpen: false
      resizable: true
      width: "80%",
      show: 
        effect: "blind"
        duration: 500
      hide: 
        effect: "explode"
        duration: 500
      position:
        my: "left bottom"
        at: "right bottom"
        of: "body"   
    
    $( "#admin_help_opener" ).click () -> $( "#admin_help" ).dialog( "open" )  
    $( "#admin_help_closer" ).click () -> $( "#admin_help" ).dialog( "close" )  
    
    $( "#param_opener" ).click () -> $( "#parametres" ).dialog( "open" )
    $( "#parametres_closer" ).click () -> $( "#parametres" ).dialog( "close" )
      
    $(' #checkbox_aide ').change () -> 
      if $(this).is(":checked")
        $( ".item" ).addClass( "aide" )
      else
        $( ".item" ).removeClass( "aide" )
    
    $(' #checkbox_piege ').change () -> 
      if $(this).is(":checked")
        $( ".arobas" )
          .addClass( "carte" )
          .draggable('enable')
      else
        $( ".arobas.item" ).remove()
        $( ".arobas" )
          .draggable('disable')
          .removeClass( "carte" )
    
        
    $(' #checkbox_rotate ').change () -> 
      if $(this).is(":checked")
        $( "#wrapper, #panel_top, #panel_bottom" ).addClass( "rotate" )
      else
        $( "#wrapper, #panel_top, #panel_bottom" ).removeClass( "rotate" )
 
  
    # C'est le tour de l'administrateur !
    $('#user').hide()
   
    # L'admin clique sur le bouton "Go"
    $('#go').click () ->
      total_membre = parseInt($('#total_membre').val())
      solution = parseInt($('#solution').val())
      
      # On parse le texte a la recherche des $ et des # qui symbolisent les items de chacun des membres de l'équation
      
      text = $('#texte')
        .val()
        .replace(/#([0-9]*\??)/g, "<div class='carte diese'>$1</div>" )
        .replace(/\$([0-9]*\??)/g, "<div class='carte dollar'>$1</div>" )
        .replace(/@([0-9]*\??)/g, "<div class='carte arobas'>$1</div>" )
      
      # On Fabrique un énoncé avec des elements (uniques) de chaque membre de l'équation draggables
      $('#enonce').prepend("<div class='enonce'>#{text}</div><button id='enonce_closer' class='closer'>x</button>")
      
      $( "#enonce" ).dialog
        autoOpen: false
        width: "100%",
        show: 
          effect: "blind"
          duration: 500
        hide: 
          effect: "explode"
          duration: 500
        position:
          my: "left bottom"
          at: "left bottom"
          of: "body" 
      $( "#enonce_opener" ).click () -> $( "#enonce" ).dialog( "open" )
      $( "#enonce_closer" ).click () -> $( "#enonce" ).dialog( "close" )
     
      $('.carte').draggable
        revert: "invalid"
        helper: "clone"
        appendTo: "#panel"
        containement: "#panel"
        zIndex: 10000

      
      # C'est au tour de l'utilisateur
      $( '#admin' ).hide()
      $( '#user' ).show()

      # On active les deux panels et une poubelle droppable
      
      # Voila pour la poubelle
      $('#trash').droppable
        accept: ".item" 
        activeClass: "ui-state-hover"
        hoverClass: "ui-state-active"
        drop: (event,ui) ->
          ui.draggable.remove()
      
      # Voila pour les panels    
      $('#panel_top, #panel_bottom').droppable
        accept: ".carte" 
        activeClass: "ui-state-hover"
        hoverClass: "ui-state-active"
        drop: (event,ui) ->   
          # Un item est un élément deja droppé dans le panel auquel cas il passe juste d'un panel a l'autre
          if ui.draggable.hasClass("item")
            offset = $(this).offset();
            leftOffset = event.clientX - offset.left - $( ui.draggable ).width()/2;
            topOffset = event.clientY - offset.top + $(document).scrollTop() - $( ui.draggable ).height()/2;
            $(this).append( $( ui.draggable ) ) 
            $( ui.draggable ).css
              left: leftOffset
              top : topOffset
               
          # Sinon on crée un nouvel item à partir du clone d'un élément
          else
            valeur = parseInt(ui.draggable.html())
            valeur = if isNaN(valeur) then solution else valeur
            clone = $( ui.draggable.clone() )
            clone.addClass("item").data( "valeur", valeur )
            if $( "#checkbox_aide" ).is(":checked")
              clone.addClass("aide")
            $(this).append clone
            offset = $(this).offset();
            leftOffset = event.clientX - offset.left - $( clone ).width()/2;
            topOffset = event.clientY - offset.top + $(document).scrollTop() - $( clone ).height()/2;
            $(clone).css
              left: leftOffset
              top : topOffset

          
            $('.item').draggable
              revert: "invalid"
              cursor: "move"
              tolerance: "fit"
      
      # L'utilisateur clique sur le bouton pour vérifier sa modélisation 
      $('#check').click () ->
        #Sommer les cartes d'un certains type d'un certain panel
        somme = ( panel, classe) ->
          s = 0
          selector = "#{panel} > #{classe}"
          $( selector ).each ->
            s += $( this ).data( "valeur" )
          return s
        
        # Quel est le type de la premiere carte du panel en haut
        # Du coup cela définit un peu tout le reste !  
        dollar_en_haut = $( '#panel_top div:first-child' ).hasClass("dollar")
        if dollar_en_haut
          t = somme("#panel_top", ".dollar")
          b = somme("#panel_bottom", ".diese")
        else
          t = somme("#panel_top", ".diese")
          b = somme("#panel_bottom", ".dollar") 
        
        if t is b and t is total_membre and $( ".arobas.item" ).length is 0
          alert "bravo !"
        else
          alert "Essayes encore !"  
  </script>
</head>

<body>  

  <div id="admin">
    <h1>Atelier Nombre</h1>
    <div id="admin_menu" class="menu">
      <div id="admin_help_opener">?</div>
      <div id="go">☑</div>
    </div>
    <textarea id="texte" rows="10" cols="50">
  Dans sa poche Chloé a @1 billet de #20€ et @3 pièces de #2€. A la librairie elle achète @1 livre à $7€ et @2 stylos à $3€.
  Combien d’argent lui reste-t-il $?
    </textarea><br>
    Valeur d'un membre <input id="total_membre" type="text" size="3" value="26" /> | Solution <input id="solution" type="text" size="3" value="13" /><br>

    <div id="admin_help" title="Aide">
      Faire précéder les éléments d'un membre de l'équation d'un dollar($) et faire précéder les éléments de l'autre membre d'un dièse(#).
      Ne pas oublier de le faire avec le point d'interrogation (qui symbolise l'inconnue).
      Il est possible de rajouter des pièges, en utilisant arobase(@), qui pourront être desactivés par la suite dans les paramètres.
      Indiquer la valeur totale d'un membre et celle de l'inconnue.
      <button id="admin_help_closer" class="closer">x</button>
    </div>
    
  </div>
  
  <div id="user">
    
    <div id="user_menu" class="menu">
      <div id="param_opener">?</div>
      <div id="enonce_opener"> &#9776;</div>
      <div id="trash">♽</div>
      <div id="check">☑</div>
    </div>    
    
    <div id="panel">
        <div id="panel_top" class="panel"></div>
        <div id="panel_bottom" class="panel"></div>
    </div>

   
    
  <div id="parametres" title="Paramètres">
    <input type="checkbox" id="checkbox_aide" class="checkbox"  />Aide<br>
    <input type="checkbox" id="checkbox_piege" class="checkbox" checked/>Pièges<br>
    <input type="checkbox" id="checkbox_rotate" class="checkbox" />Tourner les planches<br>
    <button id="parametres_closer" class="closer">x</button>
  
  </div>
  
  <div id="enonce" title="Énoncé">
  <br/><br/></div>
 

  </div>
</body>
</html>
